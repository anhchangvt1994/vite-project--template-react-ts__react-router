/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const BotInfo: typeof import('store/ServerStore.ts')['BotInfo']
  const BrowserRouter: typeof import('react-router-dom')['BrowserRouter']
  const DeviceInfo: typeof import('store/ServerStore.ts')['DeviceInfo']
  const EnvironmentInfo: typeof import('store/ServerStore.ts')['EnvironmentInfo']
  const Link: typeof import('react-router-dom')['Link']
  const LocaleInfo: typeof import('store/ServerStore.ts')['LocaleInfo']
  const NavLink: typeof import('react-router-dom')['NavLink']
  const Navigate: typeof import('react-router-dom')['Navigate']
  const Outlet: typeof import('react-router-dom')['Outlet']
  const ProxyAPI: typeof import('utils/ProxyAPIHelper/index.ts')['ProxyAPI']
  const React: typeof import('react')
  const Route: typeof import('react-router-dom')['Route']
  const RouterProvider: typeof import('react-router-dom')['RouterProvider']
  const Routes: typeof import('react-router-dom')['Routes']
  const StrictMode: typeof import('react')['StrictMode']
  const Suspense: typeof import('react')['Suspense']
  const componentDidCatch: typeof import('react')['componentDidCatch']
  const createBrowserRouter: typeof import('react-router-dom')['createBrowserRouter']
  const createContext: typeof import('react')['createContext']
  const createGlobalStyle: typeof import('styled-components')['createGlobalStyle']
  const createRef: typeof import('react')['createRef']
  const createRoot: typeof import('react-dom/client')['createRoot']
  const decode: typeof import('utils/StringHelper.ts')['decode']
  const deleteCookie: typeof import('utils/CookieHelper.ts')['deleteCookie']
  const encode: typeof import('utils/StringHelper.ts')['encode']
  const forwardRef: typeof import('react')['forwardRef']
  const generatePath: typeof import('react-router-dom')['generatePath']
  const generateSentenceCase: typeof import('utils/StringHelper.ts')['generateSentenceCase']
  const generateTitleCase: typeof import('utils/StringHelper.ts')['generateTitleCase']
  const getAPIStore: typeof import('store/APIStore.ts')['getAPIStore']
  const getCookie: typeof import('utils/CookieHelper.ts')['getCookie']
  const getCustomSlug: typeof import('utils/StringHelper.ts')['getCustomSlug']
  const getLocale: typeof import('utils/StringHelper.ts')['getLocale']
  const getSlug: typeof import('utils/StringHelper.ts')['getSlug']
  const getSlugWithoutDash: typeof import('utils/StringHelper.ts')['getSlugWithoutDash']
  const getUnsignedLetters: typeof import('utils/StringHelper.ts')['getUnsignedLetters']
  const hashCode: typeof import('utils/StringHelper.ts')['hashCode']
  const keyframes: typeof import('styled-components')['keyframes']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const rgba: typeof import('polished')['rgba']
  const setCookie: typeof import('utils/CookieHelper.ts')['setCookie']
  const setLinkAlternateTag: typeof import('utils/SeoHelper/index.ts')['setLinkAlternateTag']
  const setLinkAmphtmlTag: typeof import('utils/SeoHelper/index.ts')['setLinkAmphtmlTag']
  const setLinkAuthorTag: typeof import('utils/SeoHelper/index.ts')['setLinkAuthorTag']
  const setLinkCanonicalTag: typeof import('utils/SeoHelper/index.ts')['setLinkCanonicalTag']
  const setLinkNextTag: typeof import('utils/SeoHelper/index.ts')['setLinkNextTag']
  const setLinkPrevTag: typeof import('utils/SeoHelper/index.ts')['setLinkPrevTag']
  const setLinkTwitterTitleTag: typeof import('utils/SeoHelper/index.ts')['setLinkTwitterTitleTag']
  const setMetaAuthorTag: typeof import('utils/SeoHelper/index.ts')['setMetaAuthorTag']
  const setMetaDescriptionTag: typeof import('utils/SeoHelper/index.ts')['setMetaDescriptionTag']
  const setMetaGeoPositionTag: typeof import('utils/SeoHelper/index.ts')['setMetaGeoPositionTag']
  const setMetaGeoRegionTag: typeof import('utils/SeoHelper/index.ts')['setMetaGeoRegionTag']
  const setMetaGoogleBotTag: typeof import('utils/SeoHelper/index.ts')['setMetaGoogleBotTag']
  const setMetaGoogleSiteVerificationTag: typeof import('utils/SeoHelper/index.ts')['setMetaGoogleSiteVerificationTag']
  const setMetaICBMTag: typeof import('utils/SeoHelper/index.ts')['setMetaICBMTag']
  const setMetaKeywordsTag: typeof import('utils/SeoHelper/index.ts')['setMetaKeywordsTag']
  const setMetaOgDescriptionTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgDescriptionTag']
  const setMetaOgImageTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgImageTag']
  const setMetaOgSiteNameTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgSiteNameTag']
  const setMetaOgTitleTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgTitleTag']
  const setMetaOgTypeTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgTypeTag']
  const setMetaOgUrlTag: typeof import('utils/SeoHelper/index.ts')['setMetaOgUrlTag']
  const setMetaRobotsTag: typeof import('utils/SeoHelper/index.ts')['setMetaRobotsTag']
  const setMetaTwitterCardTag: typeof import('utils/SeoHelper/index.ts')['setMetaTwitterCardTag']
  const setMetaTwitterDescriptionTag: typeof import('utils/SeoHelper/index.ts')['setMetaTwitterDescriptionTag']
  const setMetaTwitterImageTag: typeof import('utils/SeoHelper/index.ts')['setMetaTwitterImageTag']
  const setMetaViewportTag: typeof import('utils/SeoHelper/index.ts')['setMetaViewportTag']
  const setSeoTag: typeof import('utils/SeoHelper/index.ts')['setSeoTag']
  const setTitleTag: typeof import('utils/SeoHelper/index.ts')['setTitleTag']
  const startTransition: typeof import('react')['startTransition']
  const styled: typeof import('styled-components')['default']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useHref: typeof import('react-router-dom')['useHref']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInRouterContext: typeof import('react-router-dom')['useInRouterContext']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLinkClickHandler: typeof import('react-router-dom')['useLinkClickHandler']
  const useLocaleInfo: typeof import('app/router/context/LocaleInfoContext')['useLocaleInfo']
  const useLocation: typeof import('react-router-dom')['useLocation']
  const useMatches: typeof import('react-router-dom')['useMatches']
  const useMemo: typeof import('react')['useMemo']
  const useNavigate: typeof import('react-router-dom')['useNavigate']
  const useNavigationType: typeof import('react-router-dom')['useNavigationType']
  const useOutlet: typeof import('react-router-dom')['useOutlet']
  const useOutletContext: typeof import('react-router-dom')['useOutletContext']
  const useParams: typeof import('react-router-dom')['useParams']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useResolvedPath: typeof import('react-router-dom')['useResolvedPath']
  const useRoute: typeof import('app/router/context/InfoContext')['useRoute']
  const useRoutes: typeof import('react-router-dom')['useRoutes']
  const useSearchParams: typeof import('react-router-dom')['useSearchParams']
  const useSentenceCase: typeof import('hooks/useStringHelper.ts')['useSentenceCase']
  const useSlug: typeof import('hooks/useStringHelper.ts')['useSlug']
  const useSlugWithoutDash: typeof import('hooks/useStringHelper.ts')['useSlugWithoutDash']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTitleCase: typeof import('hooks/useStringHelper.ts')['useTitleCase']
  const useTransition: typeof import('react')['useTransition']
  const useUnsignedLetters: typeof import('hooks/useStringHelper.ts')['useUnsignedLetters']
}
